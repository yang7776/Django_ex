# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import test_pb2 as test__pb2


class TestDataStub(object):
  """定义接口,一个请求接口，一个响应接口
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetInfo = channel.unary_unary(
        '/example.TestData/GetInfo',
        request_serializer=test__pb2.TestRequest.SerializeToString,
        response_deserializer=test__pb2.TestResponse.FromString,
        )


class TestDataServicer(object):
  """定义接口,一个请求接口，一个响应接口
  """

  def GetInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TestDataServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetInfo,
          request_deserializer=test__pb2.TestRequest.FromString,
          response_serializer=test__pb2.TestResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'example.TestData', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
